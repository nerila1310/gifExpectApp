{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","category","type","value","onChange","target","getGifs","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"sKAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAU,IAA9C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVY,SAAEC,GACpBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAQ,MAAI,CAACP,MAC5BC,EAAe,MAKnB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAlBe,SAAEP,GACzBF,EAAeE,EAAEQ,OAAOF,a,8BCRnBG,EAAO,uCAAG,WAAOL,GAAP,uBAAAM,EAAA,6DACbC,EADa,iDACoCC,UAAUR,GAD9C,+DAGDS,MAAMF,GAHL,cAGbG,EAHa,gBAIEA,EAAIC,OAJN,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAmB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEhC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHHO,EAAU,SAAC,GAAgB,IAAfxB,EAAc,EAAdA,SAErB,ECHwB,SAACA,GAEzB,MAA0BR,mBAAS,CAC/BoB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAbAC,qBAAW,WACPvB,EAAQL,GAAU6B,MAAK,SAAAC,GACnBC,YAAW,WAEPJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAGd,WAER,CAACzB,IAEG0B,EDjBwBM,CAAahC,GAAhCkB,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAEpB,OACI,qCACI,6BAAKzB,IAEJyB,GAAW,4CAEZ,8BACI,oBAAIJ,UAAU,YAAd,SAEQH,EAAOJ,KAAM,SAAAC,GAAG,OAAI,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,eEbrDiB,EAAe,WAExB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAEA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAE7B,uBAEA,6BAEQ2C,EAAWpB,KAAK,SAAAd,GAAQ,OACJ,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCbjDmC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.5ee14f2a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setcategories }) => {\n    \n    const [inputValue, setinputValue] = useState( '' );\n\n    const handdleInputChange = ( e ) => {\n        setinputValue( e.target.value );\n    };\n\n    const handdleSubmit = ( e ) => {\n        e.preventDefault();\n\n        if(inputValue.trim().length > 2 ){\n            setcategories( category => [inputValue] );\n            setinputValue( '' );\n        }\n    }\n    \n    return (\n        <form onSubmit={ handdleSubmit }>\n            <input \n                type=\"text\"\n                value={inputValue}\n                onChange={ handdleInputChange }\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setcategories: PropTypes.func.isRequired\n}","export const getGifs = async( category ) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=12&api_key=IfX3YCrD1IWOObZ6y7yBh04IUlbIf79H`;\n    \n    const res = await fetch(url)\n    const {data} = await res.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return(gifs);\n}","import React from 'react'\n\nexport const GifGridItem = ({title, url }) => {\n    \n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n\n    const {data:images, loading} = useFetchGifs(category);\n\n    return (\n        <>\n            <h3>{category}</h3>\n\n            {loading && <p>Cargando...</p>}\n\n            <div>\n                <ol className=\"card-grid\">\n                    {\n                        images.map(  img => <GifGridItem key={img.id} {...img} />  )\n                    }\n                </ol>\n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n    \n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( ()=>{\n        getGifs(category).then(imgs => {\n            setTimeout(() => {\n                \n                setstate({\n                    data: imgs, \n                    loading: false\n                })\n\n            }, 1500);\n        });\n    }, [category]);\n    \n    return state;\n\n}\n","import {React, useState} from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    const [categories, setcategories] = useState(['One Piece']);\n\n    return (\n        <>\n            <h2>GidExpertApp</h2>\n            <AddCategory setcategories={ setcategories }/>\n\n            <hr/>\n\n            <ol>\n                {\n                    categories.map( category => \n                                        <GifGrid  \n                                            key={category}\n                                            category={category}\n                                        /> \n                                    )\n                }\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}